body
{
    margin: 0;
    text-align: center;
    font-family: 'Josefin Slab', serif;
    /*This will apply the same font to all the text inside the body (font-family: verdana,sans-serif;) It'll first try verdana font if it does not exist then it'll fall-back to sans-serif which will be present in all the systems. 
    or we can go to fonts.google.com if we really want our users to see a particular font. This method is called as font embedding*/
}
h1
{
    margin-top: 0 auto;
    font-size: 3.125em;
    color: #DA0037;
    /* A 100% in font size means 16px.90px/16 gives 562.5% so in order to get text size as 90 px we need to set it as 562.5% to change the font size dynamically if the user increases/decreases the font size in the browser. Another way in which the font size is implemented is by using 2em,4em and so on where 4em means that each letter will occupy tthe size of two m letters. 1em is 16px, if we specify a font size as 3em in body(which is the parent of <h1> then it will add up like 3.125+3em  equals 6.125em and the heading will become 6.125em whereas others will become 3em. If we do not want that then we use rem inplace of em.*/
}
.top-container
{
    background-color:cadetblue;
    position: relative;
    padding-top: 100px;
}
.middle-container
{
}
.bottom-container
{
    margin-top: 20px;
    background-color: #F2BB7B;
    /*margin-bottom: 0px;*/
    padding: 50px 0 20px;/*This line is used to give some space between the footer-links and it's parent i.e. bottom_container and also between copyright and bottom of the screen*/
}
.top-cloud
{
    position: absolute;
    right: 300px;
    top: 50px;
}
.bottom-cloud
{
    position: absolute;
    left: 300px;
    bottom: 300px;
}
.span
{
    color: gold;
}
.mypic
{
    border-radius: 50%;/* to make my image circular*/
}
p
{
    font-size: 1.875em;
}
.skill-color
{
    color: #AE00FB;
}
#getintouch
{
    color: #DF2E2E;
}
.btn {
    background: #34d997;
    background-image: -webkit-linear-gradient(top, #34d997, #b8b62b);
    background-image: -moz-linear-gradient(top, #34d997, #b8b62b);
    background-image: -ms-linear-gradient(top, #34d997, #b8b62b);
    background-image: -o-linear-gradient(top, #34d997, #b8b62b);
    background-image: linear-gradient(to bottom, #34d997, #b8b62b);
    -webkit-border-radius: 60;
    -moz-border-radius: 60;
    border-radius: 60px;
    font-family: 'Josefin Slab', serif;
    color: #4c16b8;
    font-size: 20px;
    padding: 10px 20px 10px 20px;
    text-decoration: none;
  }
  
  .btn:hover {
    background: #3cb0fd;
    background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);
    background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);
    background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);
    background-image: -o-linear-gradient(top, #3cb0fd, #3498db);
    background-image: linear-gradient(to bottom, #3cb0fd, #3498db);
    text-decoration: none;
  }
.footer-link
{
    font-weight: bold;
    font-size: 1.260em;
    margin: 10px 20px; /* to give some spacing between the footer-links*/
}
/* We can also change the display property of<p> and <span> elements as:
.span
{
    display:block;
}
or
.p
{
    display:inline;
    or the best way is 
    display:inline-block;
    We can also do 
    display:none(which is used to hide any elements from our webpage and also we can then use the space left by that element) Also we can use (visibility:hidden) which makes the element disappear but the position remains there and we cannot put elements at it's place.
}*/
/*Web safe fonts are the fonts which have the maximum chance of getting rendered correctly in anyones browser. For styling the fonts more we can use font-weight and line-height in which font weight can be used to make our text bolder or lighter and line-heigth can give space between our fonts and the other elements above and below it.*/